name: Gallery Release
on:
  release:
    types:
      - published

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.20.x]
        platform: [macOS-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: Parse Event
        run: |
          echo "tag=$(jq -r '.release.tag_name' "${GITHUB_EVENT_PATH}" | sed s/^v//)" >> $GITHUB_ENV
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Run unit tests
        run: go test -v -race -cover -coverprofile coverage.txt -covermode=atomic ./...
      - name: update codecov
        run: |
          CODECOV_TOKEN="${{ secrets.CODECOV_TOKEN }}" bash <(curl -s https://codecov.io/bash) 
      - name:  Build and pack
        run: |
          # build package
          GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w -X github.com/cage1016/alfred-devtoys/cmd.EnabledAutoUpdate=false" -o exe_amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags "-s -w -X github.com/cage1016/alfred-devtoys/cmd.EnabledAutoUpdate=false" -o exe_arm64
          lipo -create -output .workflow/exe exe_amd64 exe_arm64
          rm  exe_amd64
          rm  exe_arm64
      - name: Configure macOS signing
        env:
          APPLE_DEVELOPER_ID: ${{ vars.APPLE_DEVELOPER_ID }}
          APPLE_APPLICATION_CERT: ${{ secrets.APPLE_APPLICATION_CERT }}
          APPLE_APPLICATION_CERT_PASSWORD: ${{ secrets.APPLE_APPLICATION_CERT_PASSWORD }}
        run: |
          keychain="$RUNNER_TEMP/buildagent.keychain"
          keychain_password="password1"

          security create-keychain -p "$keychain_password" "$keychain"
          security default-keychain -s "$keychain"
          security unlock-keychain -p "$keychain_password" "$keychain"

          base64 -D <<<"$APPLE_APPLICATION_CERT" > "$RUNNER_TEMP/cert.p12"
          security import "$RUNNER_TEMP/cert.p12" -k "$keychain" -P "$APPLE_APPLICATION_CERT_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S "apple-tool:,apple:,codesign:" -s -k "$keychain_password" "$keychain"
          rm "$RUNNER_TEMP/cert.p12"
      - name: codesign and notarize
        env:
          APPLE_ID: ${{ vars.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_DEVELOPER_ID: ${{ vars.APPLE_DEVELOPER_ID }}
        run: |
          # codesign
          codesign --timestamp --options=runtime -s "$APPLE_DEVELOPER_ID" -v .workflow/exe
          
          # pack alfredworkflow
          cd .workflow
          plutil -replace version -string "${{ env.tag }}" info.plist
          zip -r ../"DevToys_GALLERY-${{ env.tag }}.alfredworkflow" .
          cd ..
          
          # zip alfredworkflow as zip archive for notarize
          zip -r "DevToys_GALLERY-${{ env.tag }}.alfredworkflow.zip" "DevToys_GALLERY-${{ env.tag }}.alfredworkflow"

          xcrun notarytool submit "DevToys_GALLERY-${{ env.tag }}.alfredworkflow.zip" --apple-id "$APPLE_ID" --team-id "$APPLE_DEVELOPER_ID" --password "$APPLE_ID_PASSWORD"

          echo "artifact=$(echo "DevToys_GALLERY-${{ env.tag }}.alfredworkflow")" >> $GITHUB_ENV  
      - uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "${{ env.artifact }}"
